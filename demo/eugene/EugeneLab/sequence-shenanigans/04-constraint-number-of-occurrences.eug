txt[] nucleotides = ["A", "T", "C", "G"];
  
num get_random_number(num min, num max) {
  return RANDOM(min, max);
}

num get_sum(num[] arr) {
  num arr_size = SIZE(arr);
  
  num sum = 0;
  for(num i=0; i<arr_size; i=i+1) {
      sum = sum + arr[i];
  }
  
  return sum;
}


txt generate_constraint_random_sequence(num[] max_occurrences) {

  // the max. length must be the sum of the max_occurrences
  num length = get_sum(max_occurrences);
  
  txt seq;
  for(num i=0; i<length; i=i+1) {
    
    num r = get_random_number(0, 3);
    
    if(max_occurrences[r] - 1 < 0) {

        boolean bTooMany = true;
        while(bTooMany == true) {
            r=get_random_number(0, 3);
            if(max_occurrences[r] - 1 >= 0) {
                bTooMany = false;
            }
        }
    }
    max_occurrences[r] = max_occurrences[r] - 1;
    
    seq = seq + nucleotides[r];
  }
  
  return seq;  
}


txt sequence = generate_constraint_random_sequence([1, 1, 1, 1]);
println(sequence);

sequence = generate_constraint_random_sequence([2, 2, 2, 2]);
println(sequence);

sequence = generate_constraint_random_sequence([10, 1, 1, 1]);
println(sequence);

sequence = generate_constraint_random_sequence([10, 10, 10, 10]);
println(sequence);

sequence = generate_constraint_random_sequence([100, 100, 100, 100]);
println(sequence);

sequence = generate_constraint_random_sequence([1000, 1000, 1000, 1000]);
println(sequence);

/*
 *  now, we define a function that can generate a given number 
 *  of random sequences with given constraints on the number of 
 *  the nucleotides' occurrences.
 */
txt[] generate_constraint_sequences(num nr_of_seqs, num[] max_occurrences) 
{
    txt[] sequences;
    
    for(num i=0; i<nr_of_seqs; i=i+1)
    {
        sequences[i] = generate_constraint_random_sequence(max_occurrences);
        println("i: ", i); 
    }
    
    return sequences;
}

// in the following, we generate 100 DNA sequences in that each nucleotide
// can appear at maximum 10 times. 
txt[] seqs = generate_constraint_sequences(1000, [1000, 1000, 1000, 1000]);
num nr_of_seqs = SIZE(seqs);
if(nr_of_seqs != 1000) {exit;} 
println("**** DONE ****");
 