include "./designs/cidar/raven/lu-invertase-gates/design-space.h"


/** AND GATE **/

/* This is the published AND gate...
 * Device AND_gate1(proD, Bxb1_attB, T1, -Bxb1_attP, phiC31_attP, T1, -phiC31_attB, rbs, gfp, T1);
 */
// Q: can we define any rules that produce the published AND gate?
Device AndGate(
	Promoter, InvertaseSite, Terminator, -InvertaseSite, InvertaseSite, Terminator, -InvertaseSite, RBS, Reporter, Terminator);

Rule r1(
	ON AndGate:
		proD NEXTTO Bxb1_attB
			AND
		Bxb1_attB NOTMORETHAN 1
			AND
		Bxb1_attB BEFORE Bxb1_attP 
			AND
		Bxb1_attP BEFORE phiC31_attP 
			AND 
		Bxb1_attP NEXTTO phiC31_attP 
			AND
		phiC31_attB NEXTTO rbs
);

// finally, let's do some product
Device[] lst = product(AndGate, strict);
pigeon(lst);
//for(num i=0; i<lst.size(); i++) {
//   println(lst[i]);
//}

