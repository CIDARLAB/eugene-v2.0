PartType Promoter;
PartType Insulator;
PartType RBS;
PartType CDS;
PartType Terminator;

CDS BetIjs;
CDS HlyIIRjs;
CDS PhlF;
CDS output_YFP;
Insulator RiboJ51;
Insulator RiboJ53;
Insulator RiboJ57;
Promoter input_pTac;
Promoter input_pTet;
Promoter pBetIjs;
Promoter pHlyIIR;
Promoter pPhlF;
RBS js2_beti;
RBS js2_hlyiir;
RBS js2_phlf;
Terminator ECK120033736;
Terminator ECK120033737;
Terminator L3S3P11;

Device gate_output_YFP(+pPhlF,+pBetIjs,+output_YFP);
Device gate_NOR_js2_PhlF(+input_pTac,+pHlyIIR,+RiboJ53,+js2_phlf,+PhlF,+ECK120033737);
Device gate_NOR_js2_BetI(+input_pTet,+pHlyIIR,+RiboJ57,+js2_beti,+BetIjs,+L3S3P11);
Device gate_NOR_js2_HlyIIR(+input_pTac,+input_pTet,+RiboJ51,+js2_hlyiir,+HlyIIRjs,+ECK120033736);

Device logic_gates(
	[gate_output_YFP], 
	[gate_NOR_js2_PhlF], 
	[gate_NOR_js2_BetI], 
	[gate_NOR_js2_HlyIIR]);

Rule allRules(ON logic_gates:
	gate_output_YFP exactly 1 AND
	gate_NOR_js2_PhlF exactly 1 AND
	gate_NOR_js2_BetI exactly 1 AND
	gate_NOR_js2_HlyIIR exactly 1 AND
	ENDSWITH gate_output_YFP AND
	FORWARD gate_output_YFP
);

result = permute(logic_gates);

println(result);
