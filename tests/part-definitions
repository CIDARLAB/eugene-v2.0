// valid ones
Property prop1(txt);
Property prop2(num);
Property prop3(txt[]);
Property prop4(num[]);
Property prop5(boolean);

PartType PT0();
PartType PT1(prop1);
PartType PT2(prop1, prop2);
PartType PT3(prop1, prop2, prop3);
PartType PT4(prop1, prop2, prop3, prop4);
PartType PT5(prop1, prop2, prop3, prop4, prop5);

// parts with DOT notation
PT0 pt0_1;
PT1 pt1_1(.prop1("A"));
PT2 pt2_1(.prop1("T"), .prop2(3.1));
PT3 pt3_1(.prop1("C"), .prop2(3.14), .prop3(["C"]));
PT4 pt4_1(.prop1("G"), .prop2(3.141), .prop3(["A", "T", "C", "G"]), .prop4([0, 1.1, 2.2, 3.3, 4.4, 5.5]));
PT5 pt5_1(.prop1("ATCG"), .prop2(3.1415962), .prop3(["A", "T", "C", "G"]), .prop4([1.0, 2.0, 3.0, 4, 5]), .prop5(true));

// part w/o DOT notation
PT0 pt0_2;
PT1 pt1_2("A");
PT2 pt2_2("T", 3.1);
PT3 pt3_2("C", 3.14, ["C"]);
PT4 pt4_2("G", 3.141, ["A", "T", "C", "G"], [0, 1.1, 2.2, 3.3, 4.4, 5.5]);
PT5 pt5_2("ATCG", 3.1415962, ["A", "T", "C", "G"], [0, 1.1, 2.2, 3.3, 4.4, 5.5], true);


// invalid part definitions:
// please uncomment them!

// - unknown part type
//PTX ptx1();

// - duplicate part
//PT0 pt0_2; 
//PT1 pt0_1;

// - property does not exist
//PT0 noProperty(.prop1("invalid"));


// - the part type does not contain the given property
// -- using the . notation 
//PT1 inv1(.prop2("txt"));
//PT1 inv2(.prop1(1.0));

// - invalid number of property values
//PT0 inv3("txt");
//PT1 inv4("txt", "txt");
//PT5 inv5(1, 2, 3, 4, 5, 6);

// - type inconsistencies
//PT5 inv6(1, 2, 3, 4, 5);
//PT5 inv7("ATCG", 3.1415962, [0, 1.1, 2.2, 3.3, 4.4, 5.5], ["A", "T", "C", "G"], true);





