/*
 *  In this example, we present Eugene's imperative 
 *  features to bubble-sort an array
 */
 
num[] array = [9, 8, 7, 6, 5, 4, 3, 2, 1];
num s = SIZEOF(array);

num tmp;

// a counter for the number of iterations
num nr_iterations = 0;

// we bubble-sort while "swappings"
// have been performed
bool swap = true;
while(swap == true)
{
    swap = false;
    
    // in this loop we swap adjacent 
    // elements in the array
    for(num i = 0; i < s - 1; i = i + 1)
    {
        num j = i+1;
        if(array[i] > array[i+1]) {

            // do the swapping
            tmp = array[i];
            array[i] = array[i+1];
            array[j] = tmp;
        
            swap = true;
        }    
    }
        
    // increment the iterations counter
    nr_iterations = nr_iterations + 1;
}

// finally, we print the array
println("sorted -> ", array, " in ", nr_iterations, " iterations");
 