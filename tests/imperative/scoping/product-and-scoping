
num i = 1;
if(i == 1) {
    num i = 2;
    if(i!=2) {exit;}
    else     {println(i);}
} 
if(i!=1) {exit;}
else     {println(i);}

println("********");

testSh_t(num k) {
    num i = 1;
    if(k == 1) {
        num i = 2;
        if(i!=2) {exit;}
        else     {println(i);}
    } 
    if(i!=1) {exit;}
    else     {println(i);}
}

testSh_t(1);

/**** TEST 1: Definition of Parts depending on conditions (IF-ELSE) ***/
/**
testConditionalPartDefinitions(num k) {
    PartType PT;
    if(k==1) {
        PT p1;
    } else {
        PT p2;
        PT p3;
    }

    Device D(PT);
    lod = product(D);
    println(lod);
    if(SIZEOF(lod) != 2 * k) {exit;}
}

testConditionalPartDefinitions(1);
testConditionalPartDefinitions(2); 

/**** Definition of Devices depending on conditions (IF-ELSE)
// TEST -- START
PartType PT;
PT p1;

num s = 1;
//num s = 2;

Device d;
IF(s == 1) {
    Device D1(PT);
    d = D1;
} else {
    Device D2(PT, PT);
    d = D2;
}
lod = product(d);
println(lod);
if(SIZEOF(lod) != 2 * s) {exit;}
// TEST2 -- END
  ****/
  

/**** Definition of Rules depending on conditions ****/
PartType PT;
PT p1;
Device D(PT);
println(D);
//num s = 1;
num s = 2;
if(s == 1) {
    println("*** s==1 -> " , D);
    //Rule R(ON D: all_forward);
} else {
    println("*** s==1 -> " , D);
    //Rule R(ON D: all_forward \/ all_reverse);
}
lod = product(D);
println(lod);
if(SIZEOF(lod) != s) {exit;}