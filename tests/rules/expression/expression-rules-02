Property prop1(txt);
Property prop2(num);

PartType PT(prop1, prop2);

// parts with DOT notation
PT pt0(.prop1("0"), .prop2(0));
PT pt1(.prop1("1"), .prop2(1));
PT pt2(.prop1("2"), .prop2(2));
PT pt3(.prop1("3"), .prop2(3));
PT pt4(.prop1("4"), .prop2(4));
PT pt5(.prop1("5"), .prop2(5));
PT pt6(.prop1("6"), .prop2(6));
PT pt7(.prop1("7"), .prop2(7));
PT pt8(.prop1("8"), .prop2(8));
PT pt9(.prop1("9"), .prop2(9));

/*
 * in these tests, we do not specify the part type
 * we only specify constraints on property values
 */
 
/*** returns 1 device ***/    
Device D1(PT);
Rule r1(on D1:
   0 == prop2 and all_forward);
product(D1);    

 
/*** returns 1 device ***/
Device D1_9(PT);
Rule r1_9(on D1_9:
    prop2 >= 9 and all_forward);
product(D1_9);

 
Device D1_2(PT, PT);
Rule r1_2(ON D1_2:
    prop1 == "0" \/ prop2 == 9 
    /\
    all_forward);
product(D1_2);

/*** returns 10 devices ***/    
Device D10(PT);
Rule r10(on D10:
    prop2 >= 0 and all_forward);
product(D10);    


/*** returns 9 devices ***/
Device D9(PT);
Rule r9(on D9:
    prop2 >= 1 and all_forward);
product(D9);    


/*** returns 400 devices ***/
Device D400(PT, PT);
Rule r400(on D400: 
	prop2 >= 0);
product(D400);

 
/*** returns 160,000 devices    
Device D160000(PT, PT, PT, PT);
Rule r160000(on D160000: 
	prop2 >= 0);
product(D160000);
 ***/

/*** returns 16 devices ***/
Device D16(PT, PT, PT, PT);
Rule r16(on D16: 
	prop2 >= 9);
product(D16);


/*** returns 50,000 devices
     (limiting miniEugene)   
Device veryBig(
	PT, PT, PT, PT, PT,
	PT, PT, PT, PT, PT,
	PT, PT, PT, PT, PT,
	PT, PT, PT, PT, PT,
	PT, PT, PT, PT, PT,
	PT, PT, PT, PT, PT,
	PT, PT, PT, PT, PT,
	PT, PT, PT, PT, PT,
	PT, PT, PT, PT, PT,
	PT, PT, PT, PT, PT);  // 50 elements
Rule rVeryBig( on veryBig :
    prop2 >= 8 and all_forward);
product(veryBig);	
  ***/ 